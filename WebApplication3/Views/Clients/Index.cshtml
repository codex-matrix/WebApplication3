@model IEnumerable<WebApplication3.Models.Client>
@{
    ViewData["Title"] = "Clients";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<div class="container py-4">
    <h2 class="mb-4 text-center">Client Transactions</h2>

    <div class="row">
        
        <div class="col-md-4">
         
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">Select Client</div>
                <div class="card-body">
                   
                    <input type="text" id="clientSearch" class="form-control mb-2"
                           placeholder="Search client by name or balance...">

              
                    <select id="clientSelect" class="form-select mb-3">
                        <option value="">-- Select client --</option>
                        @foreach (var c in Model)
                        {
                            <option value="@c.ClientId"
                                    data-name="@c.FirstName @c.LastName"
                                    data-balance="@c.Balance">
                                @c.FirstName @c.LastName — @c.Balance.ToString("C")
                            </option>
                        }
                    </select>
                    <div id="clientBalance" class="fw-bold text-success"></div>
                </div>
            </div>

        
            <div class="card shadow-sm">
                <div class="card-header bg-secondary text-white">Add Transaction</div>
                <div class="card-body">
                    <form id="addTxForm">
                        <div class="mb-3">
                            <label>Type</label>
                            <select id="txType" class="form-select">
                                <option value="1">Debit</option>
                                <option value="2">Credit</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label>Amount</label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input id="txAmount" type="number" step="0.01" class="form-control" />
                            </div>
                        </div>
                        <div class="mb-3">
                            <label>Comment</label>
                            <input id="txComment" class="form-control" />
                        </div>
                        <button class="btn btn-success w-100" type="submit">Add Transaction</button>
                    </form>
                </div>
            </div>
        </div>

        
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-dark text-white">Transactions</div>
                <div class="card-body">
                    <table class="table table-hover" id="txTable">
                        <thead>
                            <tr><th>Date</th><th>Type</th><th>Amount</th><th>Comment</th><th>Action</th></tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    
    
    document.getElementById('clientSearch').addEventListener('input', function () {
      const filter = this.value.toLowerCase();
      const options = document.querySelectorAll('#clientSelect option');
      options.forEach(opt => {
        if (!opt.value) return; 
        const name = opt.dataset.name.toLowerCase();
        const balance = opt.dataset.balance.toString();
        if (name.includes(filter) || balance.includes(filter)) {
          opt.style.display = '';
        } else {
          opt.style.display = 'none';
        }
      });
    });

    
    

    const clientSelect = document.getElementById('clientSelect');
    const clientBalance = document.getElementById('clientBalance');
    const txTableBody = document.querySelector('#txTable tbody');

    clientSelect.addEventListener('change', async () => {
      const clientId = clientSelect.value;
      if (!clientId) { txTableBody.innerHTML = ''; clientBalance.innerText = ""; return; }
      await loadTransactions(clientId);
    });

    async function loadTransactions(clientId) {
      const res = await fetch(`/api/transactions/ByClient/${clientId}`);
      const data = await res.json();
      txTableBody.innerHTML = data.map(t => `
        <tr>
          <td>${new Date(t.createdAt).toLocaleString()}</td>
          <td><span class="badge ${t.transactionType === "Debit" ? "bg-danger" : "bg-success"}">${t.transactionType}</span></td>
          <td>${t.amount.toFixed(2)}</td>
          <td><input class="form-control form-control-sm comment-input" data-id="${t.transactionId}" value="${t.comment || ""}"/></td>
          <td><button class="btn btn-sm btn-primary save-comment" data-txid="${t.transactionId}">Save</button></td>
        </tr>
      `).join('');
    }

  
    document.addEventListener('click', async e => {
      if (e.target.classList.contains('save-comment')) {
        const id = e.target.dataset.txid;
        const input = document.querySelector(`.comment-input[data-id="${id}"]`);
        await fetch('/api/transactions/UpdateComment', {
          method:'POST', headers:{'Content-Type':'application/json'},
          body: JSON.stringify({ transactionId: id, comment: input.value })
        });
        alert("Comment updated!");
      }
    });


    document.getElementById('addTxForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const clientId = parseInt(clientSelect.value);
      if (!clientId) { alert('Select client first'); return; }

      const dto = {
        clientId,
        transactionTypeId: parseInt(document.getElementById('txType').value),
        amount: parseFloat(document.getElementById('txAmount').value),
        comment: document.getElementById('txComment').value
      };

      const res = await fetch('/api/transactions/Add', {
        method: 'POST',
        headers: {'Content-Type':'application/json'},
        body: JSON.stringify(dto)
      });

      const body = await res.json();
      await loadTransactions(clientId);

      if (body && body.newBalance !== undefined) {
        const newBal = parseFloat(body.newBalance).toFixed(2);
        clientBalance.innerText = "Balance: $" + newBal;

     
        const selectedOption = clientSelect.options[clientSelect.selectedIndex];
        const namePart = selectedOption.text.split("—")[0].trim();
        selectedOption.text = `${namePart} — $${newBal}`;
      }
    });
</script>